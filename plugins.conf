#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
fifo.fifo = "on"
guile.check_license = "off"
lua.check_license = "on"
perl.chanmon.alignment = "channel"
perl.chanmon.color_buf = "on"
perl.chanmon.dynamic = "on"
perl.chanmon.first_run = "true"
perl.chanmon.logging = "off"
perl.chanmon.merge_private = "off"
perl.chanmon.nick_prefix = "<"
perl.chanmon.nick_suffix = ">"
perl.chanmon.output = "buffer"
perl.chanmon.short_names = "on"
perl.chanmon.show_aways = "off"
perl.check_license = "on"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "on"
perl.multiline.char = "↩"
perl.multiline.hide_magic_nl = "on"
perl.multiline.ipl = "on"
perl.multiline.lead_linebreak = "on"
perl.multiline.magic = "‼"
perl.multiline.magic_enter_time = "1000"
perl.multiline.magic_paste_only = "on"
perl.multiline.modify_keys = "on"
perl.multiline.paste_lock = "1"
perl.multiline.send_empty = "on"
perl.multiline.tab = "──▶▏"
perl.multiline.weechat_paste_fix = "on"
perl.rslap.slapback = "on"
perl.topicsed.color_message = "green"
perl.topicsed.message = "Edit Topic: "
python.apply_corrections.check_every = "5"
python.apply_corrections.data_timeout = "60"
python.apply_corrections.message_limit = "2"
python.apply_corrections.print_format = "[nick]: [corrected]"
python.apply_corrections.print_limit = "1"
python.check_license = "on"
python.colorize_nicks.blacklist_channels = ""
python.colorize_nicks.blacklist_nicks = ""
python.colorize_nicks.colorize_input = "on"
python.colorize_nicks.greedy_matching = "on"
python.colorize_nicks.ignore_tags = ""
python.colorize_nicks.min_nick_length = "2"
python.notify_send.ellipsis = "[..]"
python.notify_send.escape_html = "on"
python.notify_send.icon = "/usr/share/icons/hicolor/32x32/apps/weechat.png"
python.notify_send.ignore_buffers = ""
python.notify_send.ignore_buffers_starting_with = ""
python.notify_send.ignore_messages_tagged_with = "notify_none,irc_join,irc_quit,irc_part,irc_status,irc_nick_back,irc_401,irc_402"
python.notify_send.ignore_nicks = ""
python.notify_send.ignore_nicks_starting_with = ""
python.notify_send.max_length = "72"
python.notify_send.min_notification_delay = "500"
python.notify_send.nick_separator = ": "
python.notify_send.notify_for_current_buffer = "on"
python.notify_send.notify_on_all_messages_in_buffers = ""
python.notify_send.notify_on_all_messages_in_buffers_that_match = ""
python.notify_send.notify_on_filtered_messages = "off"
python.notify_send.notify_on_highlights = "on"
python.notify_send.notify_on_messages_that_match = ""
python.notify_send.notify_on_privmsgs = "on"
python.notify_send.notify_when_away = "on"
python.notify_send.timeout = "5000"
python.notify_send.transient = "on"
python.notify_send.urgency = "normal"
ruby.check_license = "on"
tcl.check_license = "on"

[desc]
perl.buddylist.buddy.on.server = "show buddy who is connected to a server, but not visiting the same channel(s) (default: on)"
perl.buddylist.buddy.on.server.color = "color for online buddy but not visiting the same channel(s) (default: lightgreen)"
perl.buddylist.buddylist = "path/file-name to store your buddies"
perl.buddylist.callback.timeout = "time in seconds to wait for answer from server. (default: 60)"
perl.buddylist.check.buddies = "time in seconds to send a /whois request to server. Be careful not to flood server (default: 20)"
perl.buddylist.color.away = "color for away buddies"
perl.buddylist.color.default = "fall back color. (default: standard weechat color)"
perl.buddylist.color.number = "color for channel number (default: lightred). If empty, channel list option is off"
perl.buddylist.color.offline = "color for offline buddies"
perl.buddylist.color.online = "color for online buddies"
perl.buddylist.color.server = "color for servername"
perl.buddylist.color.server.offline = "color for disconnected server (default: hide)"
perl.buddylist.display.original.nick = "display original nickname even if buddy changed his /nick (you have to add new nick to buddylist (default: off)"
perl.buddylist.display.social.net = "using bitlbee, buddies will be sorted in sublists with social-network name (eg. msn/jabber/facebook)(default: on)"
perl.buddylist.display.social.net.color = "color for social-network name (default: yellow)"
perl.buddylist.hide.bar = "hides buddylist bar when all servers with added buddies are offline (on = default, always = buddylist bar will be hidden (for example if you want to add item 'buddylist' to 'weechat.bar.status.items', off = buddylist bar will not be hidden))"
perl.buddylist.hide.buddy.if.offline = "hide buddy if offline (default: off)"
perl.buddylist.hide.server.if.buddies.offline = "hides server when all buddies are offline for this server (default: off)"
perl.buddylist.hide.servername.in.buddylist = "hide the servername in buddylist. If "on" only nicks will be displayed in buddylist (default: off)"
perl.buddylist.show.query = "displays a query buffer in front of the channel list"
perl.buddylist.sort = "sort method for buddylist (default = buddylist will be sort by nickname, status = buddylist will be sort by status (online, away, offline))"
perl.buddylist.text.away = "optional away text in buddylist (sort method has to be 'status')"
perl.buddylist.text.color = "color for optional online/away/offline-text in buddylist (default: white)"
perl.buddylist.text.offline = "optional offline text in buddylist (sort method has to be 'status')"
perl.buddylist.text.online = "optional online text in buddylist (sort method has to be 'status')"
perl.buddylist.use.redirection = "using redirection to get status of buddies (needs weechat >=0.3.4) (default: on)"
perl.luanma.encode_warn = "add a warning message into the line displayed on your buffer, when encoding of outgoing messages fails/is lossy"
perl.luanma.parser = "parser to use for line parsing. valid options: ondemand, async, full. ondemand will parse lines when displayed on screen (needs parse on every buffer switch, but fast on load). async and full do not need to parse lines when switching buffers, but WILL FREEZE your weechat on /script (re)load and /upgrade. be careful."
perl.luanma.tags = "white-space separated list of irc_(in_) tags to store raw messages of (only those can be recoded). see /debug tags"
perl.multiline.char = "character(s) which should be displayed to indicate end of line"
perl.multiline.hide_magic_nl = "whether the new line inserted by magic enter key will be hidden"
perl.multiline.ipl = "this setting controls override of ctrl-M (enter key) by script. Turn it off if you don't want multiline.pl to set and re-set the key binding."
perl.multiline.lead_linebreak = "if turned on, multi-line messages always start on a new line"
perl.multiline.magic = "indicator displayed when message will be sent soon"
perl.multiline.magic_enter_time = "delay after pressing enter before sending automatically (in ms), or 0 to disable"
perl.multiline.magic_paste_only = "only use multi-line messages for multi-line pastes (multi-line on enter is disabled by this)"
perl.multiline.modify_keys = "if turned on, cursor keys are modified so that they respect line boundaries instead of treating the whole multi-line message as a single line"
perl.multiline.paste_lock = "time-out to detect pastes (disable the weechat built-in paste detection if you want to use this)"
perl.multiline.send_empty = "set to on to automatically disregard enter key on empty line"
perl.multiline.tab = "character(s) which should be displayed instead of Tab key character"
perl.multiline.weechat_paste_fix = "disable ctrl-J binding when paste is detected to stop silly weechat sending out pastes without allowing to edit them"
python.apply_corrections.check_every = "Interval between each check for expired messages."
python.apply_corrections.data_timeout = "Time before a message is expired."
python.apply_corrections.message_limit = "Number of messages to store per nick."
python.apply_corrections.print_format = "Format string for the printed corrections."
python.apply_corrections.print_limit = "Maximum number of lines to correct."
python.notify_send.ellipsis = "Ellipsis to be used for notifications that are too long. Default: [..]."
python.notify_send.escape_html = "Escapes the '<', '>', and '&' characters in notification messages. Default: on."
python.notify_send.icon = "Path to an icon to be shown in notifications. Default: /usr/share/icons/hicolor/32x32/apps/weechat.png."
python.notify_send.ignore_buffers = "A comma-separated list of buffers from which no notifications should be shown. Default: ""."
python.notify_send.ignore_buffers_starting_with = "A comma-separated list of buffer prefixes from which no notifications should be shown. Default: ""."
python.notify_send.ignore_messages_tagged_with = "A comma-separated list of message tags for which no notifications should be shown. Default: notify_none,irc_join,irc_quit,irc_part,irc_status,irc_nick_back,irc_401,irc_402."
python.notify_send.ignore_nicks = "A comma-separated list of nicks from which no notifications should be shown. Default: ""."
python.notify_send.ignore_nicks_starting_with = "A comma-separated list of nick prefixes from which no notifications should be shown. Default: ""."
python.notify_send.max_length = "Maximal length of a notification (0 means no limit). Default: 72."
python.notify_send.min_notification_delay = "A minimal delay between successive notifications from the same buffer (in milliseconds; set to 0 to show all notifications). Default: 500."
python.notify_send.nick_separator = "A separator between a nick and a message. Default: : ."
python.notify_send.notify_for_current_buffer = "Send also notifications for the currently active buffer. Default: on."
python.notify_send.notify_on_all_messages_in_buffers = "A comma-separated list of buffers for which you want to receive notifications on all messages that appear in them. Default: ""."
python.notify_send.notify_on_all_messages_in_buffers_that_match = "A comma-separated list of regex patterns of buffers for which you want to receive notifications on all messages that appear in them. Default: ""."
python.notify_send.notify_on_filtered_messages = "Send notifications also on filtered (hidden) messages. Default: off."
python.notify_send.notify_on_highlights = "Send notifications on highlights. Default: on."
python.notify_send.notify_on_messages_that_match = "A comma-separated list of regex patterns that you want to receive notifications on when message body matches. Default: ""."
python.notify_send.notify_on_privmsgs = "Send notifications on private messages. Default: on."
python.notify_send.notify_when_away = "Send also notifications when away. Default: on."
python.notify_send.timeout = "Time after which the notification disappears (in milliseconds; set to 0 to disable). Default: 5000."
python.notify_send.transient = "When a notification expires or is dismissed, remove it from the notification bar. Default: on."
python.notify_send.urgency = "Urgency (low, normal, critical). Default: normal."
